server:
  port: 7002
management:
  endpoints:
    web:
      exposure:
        include: "*" #暴露所有节点
  endpoint:
    health:
      show-details: ALWAYS  #显示详细信息
spring:
  boot:
    admin:
      client:
        url: user:7002
  rabbitmq:
    #服务器地址
    host: rabbitmq
    #用户名
    username: guest
    #密码
    password: guest
    #虚拟主机
    virtual-host: /
    #端口
    port: 5672
    listener:
      simple:
        #消费者最小数量
        concurrency: 10
        #消费者最大数量
        max-concurrency: 10
        #限制消费者每次只处理一条消息，处理完再继续下一条消息
        prefetch: 1
        #启动时是否默认启动容器，默认true
        auto-startup: true
        #被拒绝时重新进入队列
        default-requeue-rejected: true
    template:
      retry:
        #发布重试，默认false
        enabled: true
        #重试时间 默认1000ms
        initial-interval: 1000
        #重试最大次数，默认3次
        max-attempts: 3
        #重试最大间隔时间，默认10000ms
        max-interval: 10000
        #重试间隔的乘数。比如配2.0 第一次等10s，第二次等20s，第三次等40s
        multiplier: 1.0
  application:
    name: user #指定服务名
  datasource:
    driverClassName: com.mysql.jdbc.Driver
#    url: jdbc:mysql://124.221.104.172:3306/erupt?useUnicode=true&characterEncoding=UTF-8&serverTimezone=Asia/Shanghai
#    username: erupt
#    password: Gi4f5DxYdY4xxGdC
    url: jdbc:mysql://localhost:3306/erupt?characterEncoding=UTF8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: root
  cloud:
    nacos:
      discovery:
        ip: user
  jpa: 
    database: MySQL
    show-sql: true
  mail:
    host: 220.181.12.13
    username: caotiyuan@163.com
    password: DZCDISXQEFZYEUXP
    properties:
      mail:
        smtp:
          auth: true
          starttls:
            enable: true
            required: true
          ssl:
            enable: true
          socketFactory:
            port: 465
            class: javax.net.ssl.SSLSocketFactory
            fallback: false
    port: 465
    protocol: smtp
    default-encoding: UTF-8
  redis:
    database: 0
    host: redis
    lettuce:
      pool:
        max-active: 8   #最大连接数据库连接数,设 -1 为没有限制
        max-idle: 8     #最大等待连接中的数量,设 0 为没有限制
        max-wait: -1ms  #最大建立连接等待时间。如果超过此时间将接到异常。设为-1表示无限制。
        min-idle: 0     #最小等待连接中的数量,设 0 为没有限制
      shutdown-timeout: 100ms
    password: ''
    port: 6379

# Sa-Token配置
sa-token:
  # token名称 (同时也是cookie名称)
  token-name: satoken
  # token有效期，单位s 默认30天, -1代表永不过期
  timeout: 2592000
  # token临时有效期 (指定时间内无操作就视为token过期) 单位: 秒
  activity-timeout: -1
  # 是否允许同一账号并发登录 (为true时允许一起登录, 为false时新登录挤掉旧登录)
  is-concurrent: true
  # 在多人登录同一账号时，是否共用一个token (为true时所有登录共用一个token, 为false时每次登录新建一个token)
  is-share: false
  # token风格
  token-style: uuid
  # 是否输出操作日志
  is-log: false
minio:
  endpoint: http://minio:9000
  accessKey: minioadmin
  secretKey: minioadmin
  bucketName: user
